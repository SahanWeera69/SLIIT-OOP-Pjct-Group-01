/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inf;

import javax.swing.JOptionPane;
import java.util.Map;
import java.util.HashMap;
import java.text.DecimalFormat;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Admin
 */

public class MonthlyREport extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */

    public MonthlyREport() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        year = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        month = new javax.swing.JComboBox<>();
        button = new javax.swing.JButton();
        reportArea = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monthly Report - FastTrack Logistics");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 255, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Elephant", 1, 36)); // NOI18N
        jLabel1.setText("Genarate Monthly Report");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel2.setText("Year");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Year", "2023", "2024", "2025" }));
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });
        jPanel1.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 120, -1));

        jLabel3.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel3.setText("Month");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 140, 50, -1));

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Month", "January ", "February", "March", "April", "May", "June", "July", "Auguest", "September", "October", "November", "December" }));
        jPanel1.add(month, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 120, -1));

        button.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        button.setText("Genarate Report");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        jPanel1.add(button, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 130, 30));

        reportArea.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jPanel1.add(reportArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 600, 270));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 700, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_yearActionPerformed

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {
        String selectedYear = (String) year.getSelectedItem();
        String selectedMonth = (String) month.getSelectedItem();

        // Validate selection
        if ("Select Year".equals(selectedYear)) {
            JOptionPane.showMessageDialog(this,
                    "Please select a year",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if ("Select Month".equals(selectedMonth)) {
            JOptionPane.showMessageDialog(this,
                    "Please select a month",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int yearValue = Integer.parseInt(selectedYear);

            // Get report data from DatabaseHandler
            Map<String, Object> reportData = DatabaseHandler.generateMonthlyReport(yearValue, selectedMonth);

            // Format the report
            StringBuilder report = new StringBuilder();
            DecimalFormat currencyFormat = new DecimalFormat("$#,##0.00");
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String currentDateTime = dateFormat.format(new Date());

            report.append(String.format("                         ========= Monthly Report (%s %d) =========\n\n",
                    selectedMonth, yearValue));

            report.append(String.format("%-20s: %d\n",
                    "          Total Deliveries",
                    (int) reportData.get("totalDeliveries")));

            report.append(String.format("%-20s: %d\n",
                    "          Total Quantity Shipped",
                    (int) reportData.get("totalQuantity")));

            report.append(String.format("%-20s: %s\n",
                    "          Total Revenue",
                    currencyFormat.format((double) reportData.get("totalRevenue"))));

            report.append(String.format("%-20s: %s\n",
                    "          Total Expenses",
                    currencyFormat.format((double) reportData.get("totalExpenses"))));

            report.append(String.format("%-20s: %s\n\n",
                    "          Net Profit",
                    currencyFormat.format(
                            (double) reportData.get("totalRevenue") -
                                    (double) reportData.get("totalExpenses"))));

            // Status breakdown
            report.append("          Status Breakdown:\n");
            Map<String, Integer> statusBreakdown = (Map<String, Integer>) reportData.get("statusBreakdown");

            for (Map.Entry<String, Integer> entry : statusBreakdown.entrySet()) {
                report.append(String.format("           - %-10s: %d\n",
                        entry.getKey(),
                        entry.getValue()));
            }

            // Report footer
            report.append(String.format("\n%-20s: %s\n",
                    "           Report Generated On",
                    currentDateTime));
            report.append("\n                       ============================================");

            // Display the report
            reportArea.setText(report.toString());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Invalid year format",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error generating report: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthlyREport.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthlyREport.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthlyREport.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthlyREport.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonthlyREport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> month;
    private java.awt.TextArea reportArea;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
